/*
 * PL:
 * Program stworzony w ramach edukacji akademickiej na Politechnice Warszawskiej
 * Program ten może być rozpowszechniany zgodnie z licencją GPLv3 - tekst licencji dostępny pod adresem http://www.gnu.org/licenses/gpl-3.0.txt
 * 
 * EN:
 * This program was made for educational purposes during my education on Warsaw University of Technology
 * You can redistribute and modify the following program under the terms of GPLv3 license (http://www.gnu.org/licenses/gpl-3.0.txt)
 */
package me.fpoon.textgen.gui;

import java.awt.Button;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.InputEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JFileChooser;
import me.fpoon.textgen.Textgen;
import me.fpoon.textgen.bot.Bot;

/**
 *
 * @author mariusz
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taMessage = new javax.swing.JTextArea();
        btSend = new javax.swing.JButton();
        scrollPaneChat = new javax.swing.JScrollPane();
        chatPanel = new me.fpoon.textgen.gui.components.ChatPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmTalk = new javax.swing.JMenu();
        jmiNewConversation = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmiQuit = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        showDiagram = new javax.swing.JMenuItem();
        showBotStats = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiNewBot = new javax.swing.JMenuItem();
        jmiLoadBot = new javax.swing.JMenuItem();
        jmiSaveBot = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenu3 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        loadTrainingText = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("jimp-textgen-java");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(426, 68));

        jScrollPane1.setBorder(null);
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(220, 64));

        taMessage.setColumns(20);
        taMessage.setLineWrap(true);
        taMessage.setRows(50);
        taMessage.setBorder(null);
        taMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                taMessageKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(taMessage);

        btSend.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        btSend.setText("➜");
        btSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSend, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        chatPanel.setAutoscrolls(true);
        scrollPaneChat.setViewportView(chatPanel);

        jmTalk.setText("Talk");

        jmiNewConversation.setText("New Conversation");
        jmiNewConversation.setName(""); // NOI18N
        jmiNewConversation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNewConversationActionPerformed(evt);
            }
        });
        jmTalk.add(jmiNewConversation);
        jmTalk.add(jSeparator1);

        jmiQuit.setText("Quit");
        jmiQuit.setName(""); // NOI18N
        jmiQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiQuitActionPerformed(evt);
            }
        });
        jmTalk.add(jmiQuit);

        jMenuBar1.add(jmTalk);

        viewMenu.setText("View");

        showDiagram.setText("Show Transition Diagram");
        showDiagram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDiagramActionPerformed(evt);
            }
        });
        viewMenu.add(showDiagram);

        showBotStats.setText("Show Bot Statistics");
        showBotStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBotStatsActionPerformed(evt);
            }
        });
        viewMenu.add(showBotStats);

        jMenuBar1.add(viewMenu);

        jMenu2.setText("Bot");

        jmiNewBot.setText("New Bot");
        jmiNewBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNewBotActionPerformed(evt);
            }
        });
        jMenu2.add(jmiNewBot);

        jmiLoadBot.setText("Load Bot...");
        jmiLoadBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiLoadBotActionPerformed(evt);
            }
        });
        jMenu2.add(jmiLoadBot);

        jmiSaveBot.setText("Save Bot...");
        jmiSaveBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSaveBotActionPerformed(evt);
            }
        });
        jMenu2.add(jmiSaveBot);
        jMenu2.add(jSeparator3);

        jMenu3.setText("N-gram size");

        buttonGroup1.add(jRadioButtonMenuItem1);
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("2");
        jMenu3.add(jRadioButtonMenuItem1);

        buttonGroup1.add(jRadioButtonMenuItem2);
        jRadioButtonMenuItem2.setText("3");
        jMenu3.add(jRadioButtonMenuItem2);

        buttonGroup1.add(jRadioButtonMenuItem3);
        jRadioButtonMenuItem3.setText("4");
        jMenu3.add(jRadioButtonMenuItem3);

        buttonGroup1.add(jRadioButtonMenuItem4);
        jRadioButtonMenuItem4.setText("5");
        jMenu3.add(jRadioButtonMenuItem4);

        buttonGroup1.add(jRadioButtonMenuItem5);
        jRadioButtonMenuItem5.setText("6");
        jMenu3.add(jRadioButtonMenuItem5);

        jMenu2.add(jMenu3);
        jMenu2.add(jSeparator2);

        loadTrainingText.setText("Load training text...");
        loadTrainingText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTrainingTextActionPerformed(evt);
            }
        });
        jMenu2.add(loadTrainingText);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Help");

        jMenuItem3.setText("About");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollPaneChat)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(scrollPaneChat, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSendActionPerformed
        String rsp, msg = taMessage.getText();
        if (msg.trim().length() == 0) {
            taMessage.setText("");
            taMessage.requestFocus();
            return;
        }
        chatPanel.addMessage(msg, null);
        Textgen.bot.analyze(msg);
        rsp = Textgen.bot.generate(10);
        if (rsp.length() == 0) {
            rsp = "...";
            lastRsp = null;
        } else {
            lastRsp = rsp;
        }
        if (diagram != null) {
            diagram.diagramPanel.displayOutput(rsp, Textgen.bot);
        }
        taMessage.setText("");
        chatPanel.addMessage(rsp, Textgen.bot);
        taMessage.requestFocus();
    }//GEN-LAST:event_btSendActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        //chatPanel.refresh();
    }//GEN-LAST:event_formComponentResized

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        //chatPanel.refresh();
    }//GEN-LAST:event_formWindowStateChanged

    private void taMessageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taMessageKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if ((evt.getModifiers() & InputEvent.CTRL_MASK) == InputEvent.CTRL_MASK) {
                taMessage.setText(taMessage.getText() + "\n");
                return;
            }
            btSendActionPerformed(null);
        }
    }//GEN-LAST:event_taMessageKeyReleased

    private void showDiagramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDiagramActionPerformed
        if (diagram == null || !diagram.isDisplayable()) {
            diagram = new DiagramFrame();
            diagram.setVisible(true);
            diagram.diagramPanel.displayOutput(lastRsp, Textgen.bot);
        } else {
            //diagram.dispatchEvent(new WindowEvent(diagram, WindowEvent.WINDOW_CLOSING));
            diagram.dispose();
            diagram = null;
        }
    }//GEN-LAST:event_showDiagramActionPerformed

    private void setEnabledAllComponents(boolean f) {
        Component[] components = this.getComponents();
        for (Component compo : components) {
            compo.setEnabled(f);
        }
    }

    private void loadTrainingTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTrainingTextActionPerformed
        JFileChooser chooser = new JFileChooser();
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            Thread th = new Thread() {
                @Override
                public void run() {
                    try {
                        Textgen.bot.analyzeFile(chooser.getSelectedFile().getPath());
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            };

            //this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            //this.setEnabledAllComponents(false);
            th.start();
            while (th.isAlive()) {
                try {
                    this.wait(1000);
                } catch (Exception e) {

                }
            }
            //this.setEnabledAllComponents(true);
            //this.setCursor(Cursor.getDefaultCursor());

            //this.setEnabled(true);
        }
    }//GEN-LAST:event_loadTrainingTextActionPerformed

    private void showBotStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBotStatsActionPerformed
        if (stats == null || !stats.isDisplayable()) {
            stats = new StatFrame();
            stats.setVisible(true);
        } else {
            //stats.dispatchEvent(new WindowEvent(stats, WindowEvent.WINDOW_CLOSING));
            stats.dispose();
            stats = null;
        }
    }//GEN-LAST:event_showBotStatsActionPerformed

    private void jmiQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiQuitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jmiQuitActionPerformed

    private void jmiNewConversationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNewConversationActionPerformed
        chatPanel.clear();
    }//GEN-LAST:event_jmiNewConversationActionPerformed

    private void jmiNewBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNewBotActionPerformed
        for (Enumeration<AbstractButton> buttons = buttonGroup1.getElements(); buttons.hasMoreElements();)
        {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                int size = Integer.valueOf(button.getText());
                Textgen.bot = new Bot(size);
            }
        }
        chatPanel.clear();
    }//GEN-LAST:event_jmiNewBotActionPerformed

    private void jmiSaveBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSaveBotActionPerformed
        JFileChooser chooser = new JFileChooser();
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
                String path = chooser.getSelectedFile().getPath();
                FileOutputStream fos = new FileOutputStream(path);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(Textgen.bot);
                System.out.println("Zapisano "+path);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jmiSaveBotActionPerformed

    private void jmiLoadBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiLoadBotActionPerformed
        JFileChooser chooser = new JFileChooser();
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
                String path = chooser.getSelectedFile().getPath();
                FileInputStream fis = new FileInputStream(path);
                ObjectInputStream ois = new ObjectInputStream(fis);
                Textgen.bot = (Bot)ois.readObject();
                System.out.println("Wczytano "+path);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jmiLoadBotActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if (about == null || !about.isDisplayable()) {
            about = new AboutFrame();
            about.setVisible(true);
        } else {
            //about.dispatchEvent(new WindowEvent(about, WindowEvent.WINDOW_CLOSING));
            about.dispose();
            about = null;
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSend;
    private javax.swing.ButtonGroup buttonGroup1;
    private me.fpoon.textgen.gui.components.ChatPanel chatPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenu jmTalk;
    private javax.swing.JMenuItem jmiLoadBot;
    private javax.swing.JMenuItem jmiNewBot;
    private javax.swing.JMenuItem jmiNewConversation;
    private javax.swing.JMenuItem jmiQuit;
    private javax.swing.JMenuItem jmiSaveBot;
    private javax.swing.JMenuItem loadTrainingText;
    private javax.swing.JScrollPane scrollPaneChat;
    private javax.swing.JMenuItem showBotStats;
    private javax.swing.JMenuItem showDiagram;
    private javax.swing.JTextArea taMessage;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables
    private DiagramFrame diagram;
    private StatFrame stats;
    private String lastRsp;
    private AboutFrame about;
}
